name: Patch bundle updater

on:
  workflow_dispatch:
  schedule:
    - cron: '*/120 * * * *'

jobs:
  check_for_updates:
    name: Check for bundle updates
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}
      changed_files: ${{ steps.find_commit.outputs.changed_files }}
      cancel_workflow: ${{ steps.run_generate_bundles.outputs.cancel_workflow }}

    steps:
      - name: Checkout code
        uses: actions/checkout@main
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@main
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests httpx
        working-directory: ${{ github.workspace }}

      - name: Run generate_bundles.py
        id: run_generate_bundles
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install requests httpx
          output=$(python generate_bundles.py 2>&1)
          echo "$output"
          if echo "$output" | grep -q "Your branch is up to date with 'origin/bundles'."; then
            echo "Branch is up to date with 'origin/bundles'. Exiting..."
            echo "::set-output name=cancel_workflow::true"
          else
            git add '*.json'
            if [ -n "$(git status --porcelain)" ]; then
              git commit -m "Update patch-bundle.json to latest"
              git push origin HEAD:${{ github.ref }} --follow-tags
            else
              echo "No changes to commit. Exiting..."
              echo "::set-output name=has_changes::false"
            fi
          fi
        working-directory: ${{ github.workspace }}
        continue-on-error: true

      - name: Check for changes
        id: check_changes
        if: steps.run_generate_bundles.outputs.cancel_workflow != 'true'
        run: |
          if git diff --quiet HEAD HEAD^ -- '*.json'; then
            echo "::set-output name=has_changes::false"
          else
            echo "::set-output name=has_changes::true"
          fi
          
      - name: Find commit for changed files
        id: find_commit
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          changed_files=$(git diff --name-only HEAD^ -- '*.json')
          if [ -z "$changed_files" ]; then
            echo "::set-output name=changed_files::"
          else
            echo "$changed_files" > changed_files.txt
            echo "::set-output name=changed_files::changed_files.txt"
          fi
          
      - name: Push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: bundles

      - name: Create artifact of changed files
        if: steps.check_changes.outputs.has_changes == 'true' && steps.find_commit.outputs.changed_files != ''
        uses: actions/upload-artifact@main
        with:
          name: changed_files
          path: changed_files.txt
